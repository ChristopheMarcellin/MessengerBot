const { setProjectType, initializeSpecFields, detectLanguageFromText, getNextSpec, isText } = require('../utils');
const { getSession, saveSession, resetSession, logSessionState } = require('../sessionStore');

async function stepInitializeSession(context) {
    const { senderId, message } = context;
    const isEndSession = message.trim().toLowerCase() === 'end session';
    let session;

    // üîê STOP PROBL√àME EN VUE
    if (typeof senderId !== 'string' || senderId.trim() === '') {
        console.warn('[INIT] senderId manquant ‚Üí impossible de poursuivre.');
        return false;
    }


    if (isEndSession) {

        session = resetSession(context);

        //if (isText(message) && typeof session.language !== 'string') {
        //    session.language = detectLanguageFromText(message);  // ‚úÖ d√©tecte imm√©diatement
        //}
        context.session = session;
        context.session.mode = 'end session';
        // DEBUG VERROU
        console.log('[INIT end session] Session explicitement remise √† null.');
        return false;
    }

    // üß† R√©cup√©ration uniquement si ce n'est pas un end session
    session = getSession(senderId);

    if (!session) {
        session = resetSession(context);
        if (isText(message) && typeof session.language !== 'string') {
            session.language = detectLanguageFromText(message);  // ‚úÖ d√©tecte imm√©diatement
        }
        context.session = session;
        console.log('[INIT] Session cr√©√©e car manquante');
        return true;
    }

    // üß† Affectation obligatoire avant traitement
    if (isText(message) && typeof session.language !== 'string') {
        session.language = detectLanguageFromText(message);  // ‚úÖ d√©tecte imm√©diatement
    }

    context.session = session;

    // ‚úÖ Si d√©j√† initialis√©e, rien √† faire
    if (session.specValues && session.askedSpecs) {
        logSessionState("***[INIT session d√©j√† initialis√©e]", session);
        //    console.log('[INIT] Session d√©j√† initialis√©e ‚Üí aucune action requise');
        return true;
    }

    return true;
}

module.exports = { stepInitializeSession };
